generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(cuid())
  email      String @unique
  first_name String
  last_name  String
  cpf        String @unique
  phone      String @unique
  password   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expenses    Expense[]
  teamMembers TeamMember[]

  @@map("users")
}

model Expense {
  id            String  @id @default(cuid())
  title         String
  description   String?
  recurrence    String // monthly, weekly, daily or once
  amountInCents Int

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("expenses")
}

model Team {
  id   String @id @default(cuid())
  name String

  expenses    Expense[]
  teamMembers TeamMember[]

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  TeamInvite TeamInvite[]

  @@map("teams")
}

model TeamMember {
  id String @id @default(cuid())

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  role String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("team_members")
}

model TeamInvite {
  id String @id @default(cuid())

  email String

  team   Team   @relation(fields: [teamId], references: [id])
  teamId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, teamId])
  @@map("team_invites")
}
